WEBVTT

1
00:00:00.000 --> 00:00:04.685
我希望这门课涵盖了很多领域，让你能够深入挖掘，
I hope this class covered a lot of ground for you to be able to dig deeper in,

2
00:00:04.685 --> 00:00:07.721
我希望它告诉你在哪里以及如何使用东西。
I hope it showed you where and how to use things.

3
00:00:07.721 --> 00:00:12.628
我希望你看够了，这样你就可以说好吧，我不知道，好吧
I hope you saw enough of it so that you can say okay i don't know it, okay it

4
00:00:12.628 --> 00:00:17.696
是的，这么多，但我有一些练习我可以查找，我有我可以的例子
was so, so much but I have some exercises I can look up, I have examples I can

5
00:00:17.696 --> 00:00:22.631
查找，我可以为工作选择合适的工具，并在需要时深入研究。
look up and I can choose the right tool for the job and dig in when I need to.

6
00:00:22.631 --> 00:00:25.484
这就是这门课的目的。
That's that's kind of the purpose of this class.

7
00:00:25.484 --> 00:00:26.411
马克这是怎么了？
What's that up Mark?

8
00:00:26.411 --> 00:00:29.515
&gt;&gt; 似乎 TypeScript 在这里真的很有帮助。
&gt;&gt; It seems like a TypeScript would be really helpful here.

9
00:00:29.515 --> 00:00:33.396
你有没有 - &gt;&gt; 是的。
Do you have any- &gt;&gt; Yes.

10
00:00:33.396 --> 00:00:35.267
&gt;&gt; 你可以抬头看？
&gt;&gt; That you could look up?

11
00:00:35.267 --> 00:00:36.316
有资源吗？
Any resources?

12
00:00:36.316 --> 00:00:40.736
&gt;&gt; 是的，所以那里有一些人，
&gt;&gt; Yeah so there's a few people out there,

13
00:00:40.736 --> 00:00:45.806
我可以发布他们的 Twitter 句柄句柄，但是
I could post their Twitter handles handles but

14
00:00:45.806 --> 00:00:49.316
他们正在推动 TypeScript 所以
they're pushing TypeScript so

15
00:00:49.316 --> 00:00:55.439
到目前为止，这就像让 JavaScript 感觉像 Scala。
far that it's like making JavaScript feel like Scala.

16
00:00:55.439 --> 00:00:59.433
他们对类型所做的事情真的令人印象深刻，
And it's really impressive what they're doing with types,

17
00:00:59.433 --> 00:01:04.190
我打算在 TypeScript 中开始这门课，因为它更容易拥有
I was gonna start this class in TypeScript cuz it is a lot easier to just have

18
00:01:04.190 --> 00:01:08.334
类型检查器说，你在两者中都有一个函数，
the type checker say, you have a function inside of neither,

19
00:01:08.334 --> 00:01:11.448
这不是你说你会给我的。
and that's not what you said you would give me.

20
00:01:11.448 --> 00:01:18.679
但是你必须特别使用 TypeScript 的很多类型技巧，
But a lot of the type tricks that you have to do with TypeScript in particular,

21
00:01:18.679 --> 00:01:23.241
TypeScript 不喜欢承诺之类的东西，
TypeScript doesn't love things like promise,

22
00:01:23.241 --> 00:01:27.596
拿着一个要么拿着一个，你就知道一个任务。
holding an either holding a, you know a task.

23
00:01:27.596 --> 00:01:33.445
它不是为此而构建的，您必须做一些解决方法才能使其正常工作，
It's not built for that and you have to do some some workarounds to get it to work,

24
00:01:33.445 --> 00:01:38.177
它的功能越来越丰富，但最终却变成了很多类型
it's getting more feature rich but, it ends up being a lot of type

25
00:01:38.177 --> 00:01:42.416
让它同意这些超级嵌套类型的技巧。
trickery to get it to agree with these super nested types.

26
00:01:42.416 --> 00:01:47.466
所以我强烈建议使用它，但如果你要深入研究类型，
So I highly recommend working with it, but if you're gonna go that far into types,

27
00:01:47.466 --> 00:01:51.580
考虑您的环境，考虑与您一起工作的人以及
consider your environment, consider who you're working with and

28
00:01:51.580 --> 00:01:56.144
想一想，此时我是否应该只使用类型化的函数式语言。
think about, should I just use a typed functional language at this point.

29
00:01:56.144 --> 00:02:00.172
或者我应该使用 TypeScript，因为我处于我需要的环境中
Or should I use TypeScript because I'm in a setting where I need

30
00:02:00.172 --> 00:02:01.924
而是使用 TypeScript。
to use TypeScript rather.

31
00:02:01.924 --> 00:02:05.229
&gt;&gt; 你是说像 Elm 还是纯粹的纯剧本或理性？
&gt;&gt; You mean like Elm or pure pure script or reason?

32
00:02:05.229 --> 00:02:09.507
&gt;&gt; 没错，你可以用 Elm，你可以用成绩单，你可以用的理由，
&gt;&gt; Exactly, you could use Elm, you could use transcripts, use reason you can use,

33
00:02:09.507 --> 00:02:12.176
还有十几个[笑]在那里。
there's a dozen more of those [LAUGH] are out there.

34
00:02:12.176 --> 00:02:16.689
有编译到，但主要的是，如果你正在学习
There's compiled to, but the main thing is, if you're learning

35
00:02:16.689 --> 00:02:22.022
范式本身，你可以在每种语言和所有地方看到这些东西。
the paradigm itself, you see this stuff in every language and all the places.

36
00:02:22.022 --> 00:02:26.950
Elm 正在积极尝试不去这里，但人们仍在这样做，
Elm is actively trying not to go here, but people are still doing this,

37
00:02:26.950 --> 00:02:31.221
[笑]同样的事情，你可能会被理性绊倒，
[LAUGH] and the same thing, you might get tripped up in reason,

38
00:02:31.221 --> 00:02:36.178
他们有一个来自旧 Camel 的 func 类型，它是一个模块函数。
they have a func type it comes from old Camel, it's a module function.

39
00:02:36.178 --> 00:02:38.929
它与这个函子的定义不同，
It's not the same definition as this functor,

40
00:02:38.929 --> 00:02:42.935
即使它仍然植根于一些相同的术语很酷。
even though it's still rooted in some of the same terminology cool.

41
00:02:42.935 --> 00:02:47.261
非常感谢大家来上课，
So thank you all so much for for attending the class,

42
00:02:47.261 --> 00:02:52.192
如果有任何问题和我可以帮助发布的内容，请告诉我。
let me know if there's any issues and stuff I can help post.

43
00:02:52.192 --> 00:02:55.435
[笑] 我会把所有的代码都贴出来并修复任何小错误
[LAUGH] I'll post all the code up and fix any little bugs so

44
00:02:55.435 --> 00:02:57.928
当您下载它时，它实际上会运行。
it'll actually run when you download it.

45
00:02:57.928 --> 00:02:59.629
[笑] 非常感谢。
[LAUGH] Thank you very much.

46
00:02:59.629 --> 00:03:03.250
&gt;&gt; [掌声]
&gt;&gt; [APPLAUSE]
