WEBVTT

1
00:00:00.070 --> 00:00:05.250
所以这是一个非常强大的验证库的开始，我们
So this is the beginning of a pretty, pretty strong validation library that we

2
00:00:05.250 --> 00:00:08.800
可以做得更好，我们正在使用失败和成功。
can make better, and we're using fail and success.

3
00:00:08.800 --> 00:00:12.907
我想对这个库做最后一件事，只是为了让它更酷一点。
I want to do one last thing to this library, just to make it a little cooler.

4
00:00:12.907 --> 00:00:19.895
我们想说，而不是仅仅连接结果。
Is we wanna say, instead of just concatenating the results.

5
00:00:19.895 --> 00:00:26.170
我们实际上可以连接整个验证本身。
We could actually concat the entire validation itself.

6
00:00:27.185 --> 00:00:31.073
现在，我可以在这里做出几个决定。
Now, I can make a couple decisions here.

7
00:00:31.073 --> 00:00:34.530
我可以对此进行验证。
I can put a validation around this.

8
00:00:35.740 --> 00:00:38.140
所以我必须有一些东西可以组合，对吗？
So I have to have something to combine, right?

9
00:00:39.150 --> 00:00:42.574
因此，我不仅拥有一个函数，还拥有一个保存该函数的验证。
So instead of just having a function, I have a validation holding the function.

10
00:00:42.574 --> 00:00:45.159
现在我可以将这些东西结合起来。
And now I can combine these things.

11
00:00:46.160 --> 00:00:48.050
所以这是我可以做出的一个决定。
So that's one decision I can make.

12
00:00:48.050 --> 00:00:49.730
另一种可能是，
Another one could be,

13
00:00:49.730 --> 00:00:55.220
我可以要求这个函数返回成功或失败。
I can demand that this function return me a success or a failure.

14
00:00:55.220 --> 00:00:59.513
所以我可以说，好吧，让我们去做，如果它真的在那里，我们会留住你，
So I can say well, all right, let's do, if it's actually there, we'll keep you,

15
00:00:59.513 --> 00:01:01.392
否则，我们会看到你失败。
otherwise, we'll see you a failure.

16
00:01:01.392 --> 00:01:05.767
现在我实际上可以嵌入一条消息，而不仅仅是关键是坏的，对吧？
And now I can actually embed a message instead of just key is bad, right?

17
00:01:05.767 --> 00:01:10.128
我可以做一个消息说，
And I can do a message saying,

18
00:01:10.128 --> 00:01:14.500
需要在场，对吗？
needs to be present, right?

19
00:01:16.230 --> 00:01:21.080
所以这很好，但是，我们在这里错过了关键。
So that's nice, but then, we're missing the key here.

20
00:01:21.080 --> 00:01:28.700
所以这些是我现在正在考虑我的选择做出决定的事情。
So these are things I'm making decisions right now considering my options.

21
00:01:28.700 --> 00:01:35.800
所以，我想我要做什么，假设验证需要一个密钥，然后
So, I think what I'm gonna do, let's say a validation takes in a key and

22
00:01:35.800 --> 00:01:40.876
一个 x，我们就可以说，构造我们的消息，说这里的关键。
an x, and we're gonna be able to say, construct our message saying the key here.

23
00:01:40.876 --> 00:01:47.050
然后，我们可以使用 x 运行我们的验证。
And then, we can run our validation with the x.

24
00:01:47.050 --> 00:01:52.748
这就是我要定义的验证的形式。
So this is the shape of a validation that I'm going to define.

25
00:01:52.748 --> 00:01:57.210
这有点具有一些架构含义。
And that kinda has some architectural implications.

26
00:01:57.210 --> 00:01:58.810
还要注意我把它放在一个数组中。
Notice also I'm putting this in an array.

27
00:02:00.140 --> 00:02:02.795
因为我不会无法连接它所持有的任何东西，
Because I just won't fail to concat whatever it's holding,

28
00:02:02.795 --> 00:02:04.999
我可以连接一堆字符串，这仍然有效。
I can concat a bunch of strings, that still works.

29
00:02:04.999 --> 00:02:09.345
但是然后我需要在这里有这些空间以使其看起来不错并且
But then I would need to have these spaces in here to make it look nice and

30
00:02:09.345 --> 00:02:12.374
我只是有一系列的结果，太酷了。
I just rather have an array of results, so cool.

31
00:02:12.374 --> 00:02:17.197
所以我们现在可以去创建一个验证幺半群，让我们开始吧。
So we can go make a validation monoid now, let's go.

32
00:02:17.197 --> 00:02:20.548
所以我们有两件事要做，我们必须做一个验证幺半群和
So we have two things to do, we have to do a validation monoid and

33
00:02:20.548 --> 00:02:23.290
我们必须在那里更新这个缓慢的小部分。
we have to update this little slow part down there.

34
00:02:25.450 --> 00:02:30.749
所以，这里发生的事情是我们可以在这里运行验证。
So, what's happening here is we could run the validation right here.

35
00:02:30.749 --> 00:02:33.580
但这不再是一个功能，对吧？
But that's no longer a function, right?

36
00:02:33.580 --> 00:02:36.688
这将是一个验证函数，验证对象。
It's gonna be a validation function, validation object.

37
00:02:36.688 --> 00:02:40.299
所以我们会给它一个run方法，run。
So we'll give that a run method, run.

38
00:02:40.299 --> 00:02:45.178
然后这将使我成功或失败。
And then that will return me a success or a fail.

39
00:02:45.178 --> 00:02:50.620
所以我实际上可以摆脱它，对吧。
So I could actually just get rid of that, right.

40
00:02:50.620 --> 00:02:54.123
我告诉它我会给它一个键和值。
And I told it that I would give it a key and the value.

41
00:02:54.123 --> 00:02:56.180
所以这很不错。
So that's pretty nice.

42
00:02:56.180 --> 00:02:59.450
每个人都看到它是如何工作的吗？
Does everybody see how that works?

43
00:02:59.450 --> 00:03:03.657
我还没有进行验证，但这就是我正在绘制的草图，
I haven't made validation yet, but this is kind of what I'm sketching out to make,

44
00:03:03.657 --> 00:03:06.518
是验证将返回成功或失败。
is that validation will return me a success or a failure.

45
00:03:06.518 --> 00:03:11.004
当我运行验证时，我可能会结合一堆验证
And when I run the validation, I'm gonna combine a bunch of validations by probably

46
00:03:11.004 --> 00:03:13.860
有效地将他们的失败结合起来。
effectively combining their failures underneath.

47
00:03:15.780 --> 00:03:21.420
这给了我结合的能力。
And this gives me the ability to combine.

48
00:03:21.420 --> 00:03:25.950
这现在与一个可能的 concat isEmail 一起出现。
This is present now with a maybe concat isEmail.

49
00:03:27.870 --> 00:03:31.309
所以让我们继续写这篇文章。
So let's go ahead and get through writing this.

50
00:03:31.309 --> 00:03:36.225
因此，使用 isPresent 进行一些简单的邮件验证，并且
So make a little easy mail validation to go along with isPresent, and

51
00:03:36.225 --> 00:03:40.124
让我们做与 isEmail 完全相同的事情，哎呀，
let's do the exact same thing like isEmail, whoops,

52
00:03:40.124 --> 00:03:44.045
isEmail 将是一个验证，我们只会说像 x。
isEmail will be a validation, we'll just say like x.

53
00:03:44.045 --> 00:03:49.816
关于 testX，我们去了[笑]。
About at testX, there we go [LAUGH].

54
00:03:49.816 --> 00:03:56.429
所以如果它有一个加号，我们就会相信这是一封电子邮件，
So if it has an add sign, we'll believe it's an email,

55
00:03:56.429 --> 00:04:00.670
否则必须是电子邮件，很酷。
otherwise must be an email, cool.

56
00:04:00.670 --> 00:04:04.113
让我们继续编写验证，所以
And let's go ahead and write validation, so

57
00:04:04.113 --> 00:04:07.470
我们会在这里做，常量验证。
we'll do that up here, const validation.

58
00:04:07.470 --> 00:04:08.226
这需要一个 F。
That takes an F.

59
00:04:08.226 --> 00:04:14.130
我们将称之为跑步，所以我们可以进行下注，我们会说跑步。
We'll just call that run, so we can do punting, we'll say run.

60
00:04:14.130 --> 00:04:18.977
是的，如果我要结合两个验证，我们会说好，
Right, and if I was gonna combine two validations, we'll say well,

61
00:04:18.977 --> 00:04:22.033
总是会返回一个新的验证。
were always gonna return a new validation.

62
00:04:22.033 --> 00:04:28.710
该验证需要一个密钥和一个 x，然后我们将运行。
That validation takes a key, and an x, and we'll run.

63
00:04:28.710 --> 00:04:34.020
让我们看看，我们将对密钥和 x 进行验证。
Let's see, we'll run our validation on the key and the x.

64
00:04:34.020 --> 00:04:39.970
我们将连接失败或成功的结果
And we'll concat the result which is going to be a fail or a success with

65
00:04:41.180 --> 00:04:47.250
运行其他人的结果，或对 x 中的键进行其他验证。
the result of running the others, or the other validation on the key in the x.

66
00:04:49.200 --> 00:04:50.165
多么酷啊？
How cool is that?

67
00:04:50.165 --> 00:04:52.748
[笑]所以我们在这里做的是说，
[LAUGH] so what we're doing here is saying,

68
00:04:52.748 --> 00:04:57.631
我们有这个验证，我们可以与其他验证结合起来，
we have this validation that we can combine altogether with other validations,

69
00:04:57.631 --> 00:05:00.528
当我们运行它时，它会运行所有这些。
and when we run it, it's gonna run all of them.

70
00:05:00.528 --> 00:05:04.897
它会结合所有的结果 他们会结合他们的结果
And it's gonna combine all the results and they're gonna combine their results and

71
00:05:04.897 --> 00:05:06.137
[听不清] 等等。
[INAUDIBLE] so on, etc.

72
00:05:06.137 --> 00:05:09.437
让我们看看这是否有效，我确定我会遇到错误。
Let's see if this works, I'm sure I'm gonna hit a bug.

73
00:05:09.437 --> 00:05:11.926
&gt;&gt; [音频不清晰] 键在您的失败案例中。
&gt;&gt; [INAUDIBLE] key in your fail cases.

74
00:05:11.926 --> 00:05:14.861
&gt;&gt; 谢谢，那在哪儿？
&gt;&gt; Thank you, where is that?

75
00:05:14.861 --> 00:05:17.134
&gt;&gt; IsEmail, &gt;&gt; IsEmail 拿到钥匙,
&gt;&gt; IsEmail, &gt;&gt; IsEmail got the key,

76
00:05:17.134 --> 00:05:20.320
它甚至告诉我，它说你没有使用密钥。
it's even telling me, it say you're not using key.

77
00:05:20.320 --> 00:05:24.140
好吧，很酷，成功可能是一样的，是的，谢谢。
All right, cool, and it's probably the same in success, yeah, thank you.

78
00:05:25.540 --> 00:05:27.419
欣赏第二对 Is。
Appreciate the second pair of Is.

79
00:05:27.419 --> 00:05:29.217
所以让我们看看这是否有效。
So let's see if this works.

80
00:05:29.217 --> 00:05:32.340
我不想花太多时间在上面，好吗？
I don't wanna spend too much time on it, all right?

81
00:05:32.340 --> 00:05:34.530
所以它通过了。让我们摆脱电子邮件。
So it got through that. Let's get rid of the email.

82
00:05:34.530 --> 00:05:36.490
看看能不能熬过去。
See if it gets through that.

83
00:05:36.490 --> 00:05:38.069
电子邮件必须是电子邮件，这是肯定的。
Email must be an email, that's for sure.

84
00:05:38.069 --> 00:05:40.200
如果我把这个拿出来怎么办？
What if I take this out?

85
00:05:41.380 --> 00:05:45.500
姓名需要出现，电子邮件必须是电子邮件，这很酷。
Name needs to be present, email must be email, and this is pretty cool.

86
00:05:45.500 --> 00:05:47.967
如果我做布赖恩，我就完全摆脱了这个。
If I do Brian and I get rid of this altogether.

87
00:05:47.967 --> 00:05:51.930
电子邮件需要存在并且必须是电子邮件才能正常工作。
The email needs to be present and must be an email so it's working.

88
00:05:51.930 --> 00:05:56.299
它运作良好。让我们快速查看一下这段代码
It's working well. Let's just quickly look over this code for

89
00:05:56.299 --> 00:06:00.080
一分钟，看看我们做了什么。
a minute, and see what we've done.

90
00:06:00.080 --> 00:06:01.179
我们实际上可以继续前进。
We can actually keep going.

91
00:06:01.179 --> 00:06:03.958
[笑] 越来越激烈了吧？
[LAUGH] More and more intense, right?

92
00:06:03.958 --> 00:06:08.622
就像如果，一件很有趣的事情是定义
Like what if, one thing that would be fun is to define

93
00:06:08.622 --> 00:06:13.040
一个验证，如果我要合并它。
a validation that is, if I'm gonna combine it.

94
00:06:13.040 --> 00:06:18.680
如果我这样做或[笑]或者这个或那个怎么办，对吧？
What if I do or [LAUGH] Or this or that, right?

95
00:06:20.770 --> 00:06:24.808
或者我可以说，而不是仅仅将它们组合起来，我可以说或
Or alternatively I could say, instead of just combining them I could say or

96
00:06:24.808 --> 00:06:28.077
就在那里，但这不适用于幺半群和
right there, but that wouldn't be working with monoids and

97
00:06:28.077 --> 00:06:31.237
这些知道如何连接东西的抽象接口。
these abstract interfaces that know how to concat stuff.

98
00:06:31.237 --> 00:06:37.440
所以我们可以继续构建它，结果是这样的订单很好。
So we can keep building this up and it turns out and an order form this nice.

99
00:06:37.440 --> 00:06:40.950
它将被称为半环，它们在其中相互作用并
It will be called semi ring where they interact and

100
00:06:40.950 --> 00:06:46.400
相互分配并创建一种非常非常好的表达方式。
distribute over each other and create a really, really nice way to say like.

101
00:06:46.400 --> 00:06:50.620
我将结合所有这些验证，即 AND 和 OR 的混合。
I'm gonna combine all these validations in a way that's, a mixture of ANDs and ORs.

102
00:06:50.620 --> 00:06:53.980
所以我可以说，好吧，如果你给我一封电子邮件以确保它看起来像一封电子邮件，
So I can say, well, if you do give me an email to make sure it looks like an email,

103
00:06:53.980 --> 00:06:56.650
但你不必，对，那种东西。
but you don't have to, right, that kind of stuff.

104
00:06:56.650 --> 00:06:59.680
这也可以变得非常有效。
And that can get really efficient as well.

105
00:06:59.680 --> 00:07:05.113
所以，很酷，在我们按下按钮之前关于验证的任何问题，
So, cool, any questions on validations before we kind of button this up,

106
00:07:05.113 --> 00:07:09.515
我们实际上稍后会使用它，所以让我们继续
we're actually going to use this later so let's go ahead and

107
00:07:09.515 --> 00:07:11.866
只需导出，验证 [笑]。
just export, validate [LAUGH].

108
00:07:11.866 --> 00:07:16.156
哎呀，导出，验证，实际上我想我必须做模块导出续集
Whoops, export, validate and actually I think I have to do module export sequels

109
00:07:16.156 --> 00:07:18.970
因为我们不会使用包之类的。
because we're not gonna be using packages and such.
