1
00:00:00,433 --> 00:00:00,966
hey folks

2
00:00:00,966 --> 00:00:02,966
mike and nicole here with the pragmatic studio

3
00:00:03,233 --> 00:00:04,700
you could do a bunch of cool things

4
00:00:04,700 --> 00:00:06,366
with the elixir programming language

5
00:00:06,533 --> 00:00:09,100
from building web apps using the Phoenix framework

6
00:00:09,266 --> 00:00:11,533
to embedding code on network devices

7
00:00:11,633 --> 00:00:13,133
and is tempting just to jump right

8
00:00:13,133 --> 00:00:14,600
into these and hope for the best

9
00:00:14,800 --> 00:00:17,366
but elixir is a functional concurrent language

10
00:00:17,366 --> 00:00:18,366
and it requires a

11
00:00:18,366 --> 00:00:20,866
different way of thinking to enter these new worlds

12
00:00:20,933 --> 00:00:21,566
in this course

13
00:00:21,566 --> 00:00:24,133
you'll learn how to develop with elixir confidently

14
00:00:24,200 --> 00:00:25,300
for smooth settling

15
00:00:41,466 --> 00:00:43,966
now if you're coming from an oo programming background

16
00:00:43,966 --> 00:00:46,966
making the transition to functional programming can

17
00:00:47,000 --> 00:00:48,033
be a bumpy ride

18
00:00:48,333 --> 00:00:49,300
but the good thing is

19
00:00:49,366 --> 00:00:51,600
it isn't the syntax that's going to throw you

20
00:00:51,766 --> 00:00:53,733
in fact if you're a ruby programmer

21
00:00:53,733 --> 00:00:56,900
a lot of elixir syntax is going to feel familiar

22
00:00:57,133 --> 00:00:58,833
what's different is how you think

23
00:00:58,833 --> 00:01:00,266
about programming in o

24
00:01:00,266 --> 00:01:03,066
programs you're thinking revolves around objects

25
00:01:03,066 --> 00:01:05,600
whose state you can modify by calling methods

26
00:01:05,866 --> 00:01:08,200
but in elixir all data is immutable

27
00:01:08,300 --> 00:01:11,566
so you think more in terms of transforming data

28
00:01:11,566 --> 00:01:12,600
with functions

29
00:01:13,300 --> 00:01:15,433
an http web server is a great

30
00:01:15,433 --> 00:01:17,633
example of the elixir way of doing things

31
00:01:17,833 --> 00:01:18,566
at a high level

32
00:01:18,566 --> 00:01:20,600
a web server just takes a request and

33
00:01:20,600 --> 00:01:22,633
through some series of transformations

34
00:01:22,633 --> 00:01:24,000
produces a response

35
00:01:24,066 --> 00:01:24,833
and it turns out

36
00:01:24,833 --> 00:01:27,333
that building a simple web server is a great

37
00:01:27,333 --> 00:01:28,633
way to learn elixir

38
00:01:28,700 --> 00:01:29,833
as it requires us

39
00:01:29,833 --> 00:01:30,633
to use a whole

40
00:01:30,633 --> 00:01:34,066
bunch of elixir features and functional design concepts

41
00:01:34,300 --> 00:01:35,666
and by incrementally building

42
00:01:35,666 --> 00:01:36,933
this app throughout the course

43
00:01:37,233 --> 00:01:39,766
you'll gain practical experience with elixir

44
00:01:39,866 --> 00:01:42,333
and learn how all the pieces fit together

45
00:01:42,333 --> 00:01:44,500
to develop a complete elixir app

46
00:01:45,133 --> 00:01:46,033
as an added bonus

47
00:01:46,033 --> 00:01:48,233
if you're planning to use the Phoenix web framework

48
00:01:48,233 --> 00:01:49,033
you'll have a better

49
00:01:49,100 --> 00:01:50,533
understanding of how it's designed

50
00:01:50,733 --> 00:01:53,233
so without further delay let's get started

